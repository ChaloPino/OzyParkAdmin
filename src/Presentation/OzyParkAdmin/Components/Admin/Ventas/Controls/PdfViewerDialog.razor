<MudDialog Options="DialogOptions" Visible="IsOpen" VisibleChanged="ChangeIsOpen">
    <DialogContent>
        <div style="width: 100%; height: 800px; margin-top: 20px;">
            <MudExFileDisplay HandleContentErrorFunc="HandleContentError"
                              StreamUrlHandling="StreamUrlHandling.BlobUrl"
                              Dense="true"
                              AllowCopyUrl="false"
                              AllowOpenInNewTab="true"
                              CanClose="false"
                              AllowDownload="true"
                              FileName="@File!.TicketId"
                              ContentStream="@File!.Stream"
                              ContentType="@File.ContentType" />
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="CancelEditingItemAsync" Class="px-10">Cancelar</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public DialogOptions? DialogOptions { get; set; }

    [Parameter]
    public bool IsOpen { get; set; }

    [Parameter]
    public EventCallback<bool> IsOpenChanged { get; set; }

    [Parameter]
    public DownloadedTicketModel? File { get; set; }

    private async Task ChangeIsOpen(bool isOpen)
    {
        IsOpen = isOpen;
        await IsOpenChanged.InvokeAsync(isOpen);
    }

    private Task<MudExFileDisplayContentErrorResult> HandleContentError(IMudExFileDisplayInfos arg)
    {
        return Task.FromResult(MudExFileDisplayContentErrorResult.Unhandled);
    }

    private async Task CancelEditingItemAsync()
    {
        File = null;
        await ChangeIsOpen(false);
    }
}
