@using MudBlazor.Interfaces
@using OzyParkAdmin.Domain.Servicios;
@inject ILocalizationInterceptor Interceptor

<IfThen Condition="CurrentDataGrid is not null">
    <Then>
        <SwitchCase Value="CurrentDataGrid!.FilterMode">
            <CaseWhen T="DataGridFilterMode" Condition="(mode) => mode == DataGridFilterMode.ColumnFilterRow">
                <MudStack Row="true">
                    <MudSelect T="TipoServicio?" Value="tipoServicio" ValueChanged="TipoServicioFilterChangedAsync" FullWidth="true" Dense="true" Margin="Margin.Dense">
                        <MudSelectItem T="TipoServicio?" Value="@(null)">Todos</MudSelectItem>
                        <MudSelectItem T="TipoServicio?" Value="TipoServicio.SoloIda">Solo ida</MudSelectItem>
                        <MudSelectItem T="TipoServicio?" Value="TipoServicio.IdaVuelta">Ida y vuelta</MudSelectItem>
                        <MudSelectItem T="TipoServicio?" Value="TipoServicio.Ilimitado">Ilimitado</MudSelectItem>
                    </MudSelect>
                    <MudMenu Icon="@Icons.Material.Filled.FilterAlt" Size="Size.Small" Dense="true">
                        <ForIn Items="Operators" Context="o">
                            <IfThen Condition="!string.IsNullOrWhiteSpace(o)">
                                <Then>
                                    <MudMenuItem Style="@ChosenOperatorStyle(o)" OnClick="async () => await ChangeOperatorAsync(o)">@Interceptor.Handle(FilterOperatorUtils.GetTranslationKeyByOperatorName(o))</MudMenuItem>
                                </Then>
                            </IfThen>
                        </ForIn>
                    </MudMenu>
                    <MudIconButton Class="align-self-center" Icon="@Icons.Material.Filled.FilterAltOff" Size="Size.Small" OnClick="ClearFilterAsync" />
                </MudStack>
            </CaseWhen>
            <CaseWhen T="DataGridFilterMode" Condition="(mode) => mode == DataGridFilterMode.ColumnFilterMenu">
                <MudGrid>
                    <MudItem xs="12">
                        <MudGrid Spacing="0">
                            <MudItem xs="12">
                                <MudSelect @bind-Value="FilterContext!.FilterDefinition!.Operator" FullWidth="true" Label="Operador" Dense="true" Margin="Margin.Dense"
                                           Class="filter-operator">
                                    <ForIn Items="Operators" Context="fieldOperator">
                                        <MudSelectItem Value="@fieldOperator">@Interceptor.Handle(FilterOperatorUtils.GetTranslationKeyByOperatorName(fieldOperator))</MudSelectItem>
                                    </ForIn>
                                </MudSelect>
                            </MudItem>
                            <MudItem xs="12">
                                <MudSelect T="TipoServicio?" Value="tipoServicio" ValueChanged="TipoServicioFilterChanged" FullWidth="true" Dense="true" Margin="Margin.Dense">
                                    <MudSelectItem T="TipoServicio?" Value="@(null)">Todos</MudSelectItem>
                                    <MudSelectItem T="TipoServicio?" Value="TipoServicio.SoloIda">Solo ida</MudSelectItem>
                                    <MudSelectItem T="TipoServicio?" Value="TipoServicio.IdaVuelta">Ida y vuelta</MudSelectItem>
                                    <MudSelectItem T="TipoServicio?" Value="TipoServicio.Ilimitado">Ilimitado</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                        </MudGrid>
                    </MudItem>
                    <MudItem xs="12" Class="d-flex justify-end">
                        <MudButton Class="clear-filter-button" OnClick="ClearFilterAsync">Limpiar</MudButton>
                        <MudButton Class="apply-filter-button" Color="Color.Primary" OnClick="ApplyFilterAsync">Filtrar</MudButton>
                    </MudItem>
                </MudGrid>
            </CaseWhen>
        </SwitchCase>
    </Then>
</IfThen>
