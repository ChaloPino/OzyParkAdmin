@using OzyParkAdmin.Infrastructure.Layout
@inherits LayoutComponentBase
@layout ThemeLayout
@inject LayoutService LayoutService
@inject ThemeOzyPark Theme
<MudLayout>
    <MudAppBar Elevation="Theme.ThemeManager.AppBarElevation">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle" />
        <MudText Typo="Typo.h5" Class="ml-3">OzyPark Admin</MudText>
        <MudSpacer />
        <UserView />
        <ThemeMenu />
        <MudThemeManagerButton OnClick="() => OpenThemeManager(true)" />
        <MudThemeManager Open="themeManagerOpen" OpenChanged="OpenThemeManager" Theme="Theme.ThemeManager" ThemeChanged="UpdateTheme" />
    </MudAppBar>
    <MudDrawer @bind-Open="drawerOpen" ClipMode="Theme.ThemeManager.DrawerClipMode" Elevation="Theme.ThemeManager.DrawerElevation">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="mx-3 my-3" MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool drawerOpen = true;
    private bool themeManagerOpen;

    private string DarkLightModeButtonIcon => LayoutService.CurrentDarkLigntMode switch
    {
        DarkLightMode.Dark => Icons.Material.Rounded.AutoMode,
        DarkLightMode.Light => Icons.Material.Outlined.DarkMode,
        _ => Icons.Material.Filled.LightMode,
    };

    private string DarkLightModeButtonText => LayoutService.CurrentDarkLigntMode switch
    {
        DarkLightMode.Dark => "System mode",
        DarkLightMode.Light => "Dark mode",
        _ => "Ligth mode",
    };

    private void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    private void OpenThemeManager(bool value)
    {
        themeManagerOpen = value;
    }

    private void UpdateTheme(ThemeManagerTheme value)
    {
        Theme.ThemeManager = value;
        StateHasChanged();
    }
}
