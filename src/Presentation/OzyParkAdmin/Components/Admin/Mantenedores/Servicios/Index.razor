@page "/Mantenedores/Servicios"
@using OzyParkAdmin.Domain.Servicios
@inject IMediator Mediator
@inject ISnackbar Snackbar
@inject DialogOptions DialogOptions

<PageTitle>Servicios</PageTitle>
<MudText Typo="Typo.h4">Servicios</MudText>

<MudDataGrid @ref="dataGrid" T="ServicioViewModel" ReadOnly="true" Striped="true" Hover="true" ShowMenuIcon="true"
             ServerData="SearchServiciosAsync" SortMode="SortMode.Multiple"
             Groupable="true" Hideable="true" GroupExpanded="true" ColumnsPanelReordering="true"
             Filterable="true" FilterMode="DataGridFilterMode.ColumnFilterMenu">
    <ToolBarContent>
        <MudSpacer />
        <SearchControl @bind-SearchText="searchText" />
        <MudButton Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Class="ml-3" OnClick="AddServicioAsync">Nuevo servicio</MudButton>
    </ToolBarContent>
    <Columns>
        <HierarchyColumn T="ServicioViewModel" Hideable="false" />
        <PropertyColumn Property="x => x.Aka" Title="Aka" Groupable="false" Hideable="false">
            <CellTemplate>
                <MudHighlighter Text="@context.Item.Aka" CaseSensitive="false" HighlightedText="@searchText" />
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.CentroCosto.Descripcion" Title="Centro de costo">
            <CellTemplate>
                <MudHighlighter Text="@context.Item.CentroCosto.Descripcion" CaseSensitive="false" HighlightedText="@searchText" />
            </CellTemplate>
            <GroupTemplate>
                <StringGrouping Title="Centro de costo" GroupDefinition="context" />
            </GroupTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Nombre" Groupable="false" Title="Nombre">
            <CellTemplate>
                <MudHighlighter Text="@context.Item.Nombre" CaseSensitive="false" HighlightedText="@searchText" />
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.TipoServicio" Title="Tipo servicio">
            <FilterTemplate>
                <TipoServicioFilter FilterContext="context" />
            </FilterTemplate>
            <CellTemplate>
                <TipoServicioDisplay TipoServicio="context.Item.TipoServicio" />
            </CellTemplate>
            <GroupTemplate>
                <Grouping Title="Tipo servicio" GroupDefinition="context" T="ServicioViewModel" TValue="TipoServicio" />
            </GroupTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.TipoDistribucion.Descripcion" Title="Tipo distribución">
            <CellTemplate>
                <MudHighlighter Text="@context.Item.TipoDistribucion.Descripcion" CaseSensitive="false" HighlightedText="@searchText" />
            </CellTemplate>
            <GroupTemplate>
                <StringGrouping Title="Tipo distribución" GroupDefinition="context" />
            </GroupTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.TipoVigencia.Descripcion" Title="Tipo vigencia" Hidden="true">
            <CellTemplate>
                <MudHighlighter Text="@context.Item.TipoVigencia.Descripcion" CaseSensitive="false" HighlightedText="@searchText" />
            </CellTemplate>
            <GroupTemplate>
                <StringGrouping Title="Tipo vigencia" GroupDefinition="context" />
            </GroupTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.TipoControl.Aka" Title="Tipo control" Hidden="true">
            <CellTemplate>
                <MudHighlighter Text="@context.Item.TipoControl.Aka" CaseSensitive="false" HighlightedText="@searchText" />
            </CellTemplate>
            <GroupTemplate>
                <StringGrouping Title="Tipo control" GroupDefinition="context" />
            </GroupTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Orden" Title="Orden" Groupable="false" />
        <PropertyColumn Property="x => x.EsConHora" Hidden="true" Title="Es con hora">
            <FilterTemplate>
                <StateFilter FilterContext="context" />
            </FilterTemplate>
            <CellTemplate>
                <StateControl State="@context.Item.EsConHora" />
            </CellTemplate>
            <GroupTemplate>
                <BooleanGrouping Title="Es con hora" GroupDefinition="context" />
            </GroupTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.EsParaVenta" Hidden="true" Title="Es para venta">
            <FilterTemplate>
                <StateFilter FilterContext="context" />
            </FilterTemplate>
            <CellTemplate>
                <StateControl State="@context.Item.EsParaVenta" />
            </CellTemplate>
            <GroupTemplate>
                <BooleanGrouping Title="Es para venta" GroupDefinition="context" />
            </GroupTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.EsActivo" Editable="false" Title="Estado">
            <FilterTemplate>
                <IsActiveFilter FilterContext="context" />
            </FilterTemplate>
            <CellTemplate>
                <StateControl State="@context.Item.EsActivo" CanChangeStatus="true" TrueLabel="Habilitado" FalseLabel="Deshabilitado"
                              StateChanged="async (esActivo) => await SaveEsActivoAsync(context.Item, esActivo)"/>
            </CellTemplate>
            <GroupTemplate>
                <IsActiveGrouping GroupDefinition="context" />
            </GroupTemplate>
        </PropertyColumn>
        <TemplateColumn Hideable="false" Groupable="false" Filterable="false" Sortable="false">
            <CellTemplate>
                <div class="d-flex justify-end">
                    <MudTooltip Text="Editar">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="async () => await ShowEditingAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="Asignar centros de costo">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Apartment" OnClick="async () => await ShowCentrosCostoAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="Asignar tramos">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Route" OnClick="async () => await ShowTramosAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="Asignar permisos">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.DoorFront" OnClick="async () => await ShowPermisosAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="Asignar grupos etarios">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.FamilyRestroom" OnClick="async () => await ShowGruposEtariosAsync(context)" />
                    </MudTooltip>
                    <MudTooltip Text="Asignar cajas">
                        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Devices" OnClick="async () => await ShowCajasAsync(context)" />
                    </MudTooltip>
                </div>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <ChildRowContent>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@context.Item.Nombre</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudSimpleTable Style="max-width: 50%;">
                    <tr>
                        <th style="text-align: start;">Vigencia</th>
                        <td>@context.Item.Vigencia</td>
                    </tr>
                    <tr>
                        <th style="text-align: start;">Validez</th>
                        <td>@context.Item.Validez</td>
                    </tr>
                    <tr>
                        <th style="text-align: start;">Es con hora</th>
                        <td>
                            <StateControl State="@context.Item.EsConHora" />
                        </td>
                    </tr>
                    <tr>
                        <th style="text-align: start;">Es por tramos</th>
                        <td>
                            <StateControl State="@context.Item.EsPorTramos" />
                        </td>
                    </tr>
                    <tr>
                        <th style="text-align: start;">Es para venta</th>
                        <td>
                            <StateControl State="@context.Item.EsParaVenta" />
                        </td>
                    </tr>
                </MudSimpleTable>
            </MudCardContent>
        </MudCard>
    </ChildRowContent>
    <PagerContent>
        <MudDataGridPager T="ServicioViewModel" />
    </PagerContent>
</MudDataGrid>

<CascadingValue Value="true" Name="IsNested">
    <ServicioEditDialog @bind-IsOpen="openEditing" Servicio="currentServicio" CentrosCosto="centrosCosto" Franquicias="franquicias" TiposDistribucion="tiposDistribucion"
        TiposVigencia="tiposVigencia" TiposControl="tiposControl" Servicios="servicios" Plantillas="plantillas" LoadServicios="LoadServiciosAsync"
        CommitChanges="SaveServicioAsync" DialogOptions="DialogOptions" />
    <CentrosCostoDialog @bind-IsOpen="openCentrosCosto" CentrosCosto="centrosCosto" Servicio="currentServicio" CommitChanges="SaveCentrosCostoAsync" DialogOptions="DialogOptions" />
    <TramosDialog @bind-IsOpen="openTramos" CentrosCosto="centrosCosto" Tramos="tramos" Servicio="currentServicio" CommitChanges="SaveTramosAsync" DialogOptions="DialogOptions" />
    <PermisosDialog @bind-IsOpen="openPermisos" CentrosCosto="centrosCosto" Tramos="tramos" Servicio="currentServicio" CommitChanges="SavePermisosAsync" DialogOptions="DialogOptions" />
    <GruposEtariosDialog @bind-IsOpen="openGruposEtarios" GruposEtarios="gruposEtarios" Servicio="currentServicio" CommitChanges="SaveGruposEtariosAsync" DialogOptions="DialogOptions" />
    <CajasDialog @bind-IsOpen="openCajas" Cajas="cajas" Servicio="currentServicio" CommitChanges="SaveCajasAsync" DialogOptions="DialogOptions" />
</CascadingValue>
