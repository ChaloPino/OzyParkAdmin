@using OzyParkAdmin.Domain.CanalesVenta
@using OzyParkAdmin.Domain.CentrosCosto
@using OzyParkAdmin.Domain.Cupos
@using OzyParkAdmin.Domain.Servicios
@using OzyParkAdmin.Domain.Zonas
@inject IMediator Mediator
@inject CalendarioSearchModelValidator Validator
@inject ISnackbar Snackbar
<MudDialog Options="DialogOptions" Visible="IsOpen" VisibleChanged="ChangeIsOpen">
    <DialogContent>
        <IfThen Condition="loading">
            <Then>
                <MudProgressLinear Color="@Color.Primary" Class="mud-table-loading-progress" Indeterminate="true" />
            </Then>
        </IfThen>
        <MudGrid Spacing="3">
            <MudItem xs="12">
                <MudForm @ref="form" Model="search" Validation="Validator.ValidateValue" ValidationDelay="0">
                    <MudGrid Spacing="3">
                        <MudItem>
                            <MudSelect T="CentroCostoInfo"
                                       Value="search.CentroCosto"
                                       ValueChanged="CentroCostoChangedAsync"
                                       Label="Centro de costo"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       Dense="true"
                                       ToStringFunc="x => x?.Descripcion"
                                       For="() => search.CentroCosto">
                                <ForIn Items="centrosCosto" Context="centroCosto">
                                    <MudSelectItem T="CentroCostoInfo" Value="centroCosto" />
                                </ForIn>
                            </MudSelect>
                        </MudItem>
                        <MudItem>
                            <MudSelect @bind-Value="search.CanalVenta"
                                       Label="Canal de venta"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       Dense="true"
                                       ToStringFunc="x => x?.Nombre"
                                       For="() => search.CanalVenta">
                                <ForIn Items="canalesVenta" Context="canalVenta">
                                    <MudSelectItem T="CanalVenta" Value="canalVenta" />
                                </ForIn>
                            </MudSelect>
                        </MudItem>
                        <MudItem>
                            <MudSelect @bind-Value="search.Alcance"
                                       Label="Alcance"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       Dense="true"
                                       ToStringFunc="x => x?.Nombre"
                                       For="() => search.Alcance">
                                <MudSelectItem T="CupoAlcance" Value="CupoAlcance.Venta" />
                                <MudSelectItem T="CupoAlcance" Value="CupoAlcance.Revalidacion" />
                            </MudSelect>
                        </MudItem>
                        <MudItem>
                            <MudSelect @bind-Value="search.Servicio"
                                       Label="Servicio"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       Dense="true"
                                       ToStringFunc="x => x?.Nombre"
                                       For="() => search.Servicio">
                                <ForIn Items="servicios" Context="servicio">
                                    <MudSelectItem T="ServicioInfo" Value="servicio" />
                                </ForIn>
                            </MudSelect>
                        </MudItem>
                        <MudItem>
                            <MudSelect @bind-Value="search.ZonaOrigen"
                                       Label="Zona origen"
                                       Variant="Variant.Outlined"
                                       Margin="Margin.Dense"
                                       Dense="true"
                                       ToStringFunc="@(x => x?.Descripcion ?? "Sin zona de origen")"
                                       For="() => search.ZonaOrigen">
                                <MudSelectItem T="ZonaInfo" Value="(ZonaInfo?)null" />
                                <ForIn Items="zonas" Context="zona">
                                    <MudSelectItem T="ZonaInfo" Value="zona" />
                                </ForIn>
                            </MudSelect>
                        </MudItem>
                        <MudItem>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SearchAsync" StartIcon="@Icons.Material.Filled.Search">Buscar</MudButton>
                        </MudItem>
                    </MudGrid>
                </MudForm>
            </MudItem>
            <MudItem xs="12">
                <MudCalendar Items="events" ShowTodayButton="false" ShowWeek="true" ShowDay="false" ShowMonth="false" DateRangeChanged="OnDateChangesAsync" DayTimeInterval="CalendarTimeInterval.Minutes20">
                    <CellTemplate>
                        <div class="mud-cal-cell-template">
                            <MudBreakpointProvider>
                                <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                                    <IfThenElse Condition="cupoEvents[context].HayCupo">
                                        <Then>
                                            <MudChip T="string" Label="true" Color="Color.Primary" Class="mud-cal-cell-template-chip">@context.Text</MudChip>
                                        </Then>
                                        <Else>
                                            <MudChip T="string" Label="true" Color="Color.Primary" Disabled="true" Class="mud-cal-cell-template-chip">@context.Text</MudChip>
                                        </Else>
                                    </IfThenElse>
                                </MudHidden>
                                <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                                    <IfThenElse Condition="cupoEvents[context].HayCupo">
                                        <Then>
                                            <MudChip T="string" Label="true" Color="Color.Primary" Class="mud-cal-cell-template-chip">@($"{cupoEvents[context].Disponible}/{cupoEvents[context].Total}")</MudChip>
                                        </Then>
                                        <Else>
                                            <MudChip T="string" Label="true" Color="Color.Primary" Disabled="true" Class="mud-cal-cell-template-chip">ND</MudChip>
                                        </Else>
                                    </IfThenElse>
                                </MudHidden>
                            </MudBreakpointProvider>
                        </div>
                    </CellTemplate>
                </MudCalendar>
            </MudItem>
        </MudGrid>
    </DialogContent>
</MudDialog>
