@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using OzyParkAdmin.Domain.Seguridad.Usuarios

@inject UserManager<Usuario> UserManager
@inject IEmailSender<Usuario> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>¿Olvidó su contraseña?</PageTitle>

<MudGrid Justify="Justify.Center">
    <MudItem>
        <EditForm Model="Input" method="post" OnValidSubmit="OnValidSubmitAsync" FormName="forgot">
            <DataAnnotationsValidator />

            <MudText Typo="Typo.h4" Align="Align.Center">¿Olvidó su contraseña?</MudText>
            <MudDivider Class="d-flex flex-grow-1" DividerType="DividerType.Middle" />

            <MudStaticTextField @bind-Value="Input.Email" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Outlined.Email" autocomplete="username"
                                Class="pb-2" Margin="Margin.Dense" Variant="Variant.Outlined" Label="Ingrese su email" For="() => Input.Email" />

            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexEnd">
                <MudLink Href="Account/Login" Typo="Typo.body2" Color="Color.Primary"><b>Ya tengo cuenta</b></MudLink>
            </MudStack>

            <MudStaticButton Class="my-4" FormAction="FormAction.Submit" Color="Color.Primary" Variant="Variant.Filled" FullWidth="true">Resetear contraseña</MudStaticButton>
        </EditForm>
    </MudItem>
</MudGrid>


@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
